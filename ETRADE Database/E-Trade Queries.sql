--SALEORDERS Tablosu üzerinde hangi þehirde ne kadarlýk satýþ yapýldýðý bilgisini ceken sql sorgusunu yazýnýz.

SELECT CITY, SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS
GROUP BY CITY
ORDER BY CITY

--SALEORDERS Tablosu þehirlere göre hangi ayda ne kadarlýk satýþ yapýldýðý bilgisini çeken sql sorgusunu yazýnýz.
SELECT CITY,MONTH_,SUM(LINETOTAL) AS TOTALSALSE 

FROM SALEORDERS
GROUP BY CITY,MONTH_
ORDER BY CITY,MONTH_

--Her ilin haftanýn en çok hangi gününde satýþ yaptýðýný öðrenip ona göre þehir ve günlere özel kampanya yapmak istiyoruz.
--Þehirlerin haftanýn günlerine göre ne kadarlýk satýþ yaptýðý bilgisini getiren sorguyu yazýnýz.

SELECT CITY,DAYOFWEEK_,SUM(LINETOTAL) AS TOTALSALE FROM  SALEORDERS
GROUP BY CITY,DAYOFWEEK_
ORDER BY CITY,DAYOFWEEK_

--
SELECT 
DISTINCT CITY,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND DAYOFWEEK_='01.PZT') AS PAZARTESI,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND DAYOFWEEK_='02.SAL') AS SALI,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND DAYOFWEEK_='03.ÇAR') AS CARSAMBA,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND DAYOFWEEK_='04.PER') AS PERSEMBE,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND DAYOFWEEK_='05.CUM') AS CUMA,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND DAYOFWEEK_='06.CMT') AS CUMARTESI,
(SELECT SUM(LINETOTAL) FROM SALEORDERS WHERE CITY=S.CITY AND DAYOFWEEK_='07.PAZ') AS PAZAR
FROM SALEORDERS S
ORDER BY 1

-- Her ilin en çok satan ilk 5 kategorisini getiren sorguyu yazýnýz.

SELECT 
S.CITY,S1.CATEGORY1,SUM(S1.TOTALSALE) AS TOTALSALE

FROM SALEORDERS S
CROSS APPLY(SELECT TOP 5 CATEGORY1,SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS WHERE CITY=S.CITY GROUP BY  CATEGORY1 ORDER BY 2 DESC) S1
GROUP BY S.CITY,S1.CATEGORY1
ORDER BY S.CITY,SUM(S1.TOTALSALE) DESC

--Her þehirde en çok satýþ yapýlan 3 kategoriyi ve oonun altýndaki en çok satýþ yapýlan 3 alt kategoriyi getiren sorguyu yazýnýz.

SELECT S.CITY,S1.CATEGORY1,S2.CATEGORY2,SUM(S1.TOTALSALE) AS TOTALSALE
FROM SALEORDERS S

CROSS APPLY(SELECT TOP 3 CATEGORY1, SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS  WHERE CITY=S.CITY GROUP BY CATEGORY1 ORDER BY 2 DESC) S1
CROSS APPLY(SELECT TOP 3 CATEGORY2, SUM(LINETOTAL) AS TOTALSALE FROM SALEORDERS  WHERE CITY=S.CITY AND CATEGORY1=S1.CATEGORY1 GROUP BY CATEGORY2 ORDER BY 2 DESC) S2

GROUP BY CITY,S1.CATEGORY1,S2.CATEGORY2
ORDER BY 1,2,4 DESC

--Tablolarý Join ile birleþtirerek SALEORDERS tablosunu doldurunuz.

SET LANGUAGE Turkish
SELECT TOP 100
OD.ID,
U.USERNAME_,U.NAMESURNAME,U.TELNR1,U.TELNR2,
C.COUNTRY,CT.CITY,
T.TOWN,ADR.ADDRESSTEXT,
O.ID,ITM.ITEMCODE,ITM.ITEMNAME,ITM.BRAND,ITM.CATEGORY1,ITM.CATEGORY2,ITM.CATEGORY3,ITM.CATEGORY4,
OD.AMOUNT, OD.UNITPRICE,OD.LINETOTAL,CONVERT(DATE,O.DATE_) AS ORDERDATE,CONVERT(TIME,O.DATE_) ORDERTIME,
YEAR(O.DATE_) AS YEAR,DATENAME(MONTH,O.DATE_) AS MONTH_,DATENAME(DW,O.DATE_) AS DAYOFWEEK_

FROM ORDERS O
INNER JOIN ORDERDETAILS OD ON OD.ORDERID= O.ID
INNER JOIN ITEMS ITM ON ITM.ID=OD.ITEMID
INNER JOIN USERS U ON O.USERID=U.ID
INNER JOIN ADDRESS ADR ON ADR.ID=O.ADDRESSID
INNER JOIN COUNTRIES C ON C.ID=ADR.COUNTRYID
INNER JOIN CITIES CT ON CT.ID=ADR.CITYID
INNER JOIN TOWNS T ON T.ID=ADR.TOWNID


------- SALEORDERS TABLOSU OLUSTURMA
SET LANGUAGE Turkish
INSERT INTO SALEORDERS 
(ID, USERNAME_, NAMESURNAME, TELNR1, TELNR2, COUNTRY, CITY,
TOWN, ADDRESSTEXT, ORDERID, ITEMCODE, ITEMNAME, BRAND, CATEGORY1, CATEGORY2, CATEGORY3, CATEGORY4,
AMOUNT, UNITPRICE, LINETOTAL, ORDERDATE, ORDERTIME, YEAR_, MONTH_, DAYOFWEEK_)

SELECT 
OD.ID,
U.USERNAME_,U.NAMESURNAME,U.TELNR1,U.TELNR2,
C.COUNTRY,CT.CITY,
T.TOWN,ADR.ADDRESSTEXT,
O.ID,ITM.ITEMCODE,ITM.ITEMNAME,ITM.BRAND,ITM.CATEGORY1,ITM.CATEGORY2,ITM.CATEGORY3,ITM.CATEGORY4,
OD.AMOUNT, OD.UNITPRICE,OD.LINETOTAL,CONVERT(DATE,O.DATE_) AS ORDERDATE,CONVERT(TIME,O.DATE_) ORDERTIME,
YEAR(O.DATE_) AS YEAR,DATENAME(MONTH,O.DATE_) AS MONTH_,DATENAME(DW,O.DATE_) AS DAYOFWEEK_

FROM ORDERS O
INNER JOIN ORDERDETAILS OD ON OD.ORDERID= O.ID
INNER JOIN ITEMS ITM ON ITM.ID=OD.ITEMID
INNER JOIN USERS U ON O.USERID=U.ID
INNER JOIN ADDRESS ADR ON ADR.ID=O.ADDRESSID
INNER JOIN COUNTRIES C ON C.ID=ADR.COUNTRYID
INNER JOIN CITIES CT ON CT.ID=ADR.CITYID
INNER JOIN TOWNS T ON T.ID=ADR.TOWNID

--Ýliþkisel tablolarý kullanarak hangi þehirde ne kadarlýk þatýþ yapýldýðý bilgisini getiren sorguyu yazýnýz.
SET STATISTICS IO ON
SELECT CT.CITY,ROUND(SUM(O.TOTALPRICE),0) AS TOTALPRICE
FROM ORDERS O 
INNER JOIN ADDRESS ADR ON ADR.ID=O.ADDRESSID
INNER JOIN CITIES CT ON CT.ID=ADR.CITYID
GROUP BY CT.CITY

--Her markanýn ana kategoriye göre en çok satan CATEGORY1 alanýný getiren sorguyu yazýnýz.

SELECT ITM.BRAND,ITM.CATEGORY1,SUM(OD.LINETOTAL) AS TOTALPRICE
FROM ORDERDETAILS OD
INNER JOIN  ITEMS ITM ON ITM.ID=OD.ITEMID
GROUP BY ITM.BRAND,ITM.CATEGORY1
ORDER BY BRAND,TOTALPRICE DESC

--Her kategorinin içerisindeki en çok satan markayý getiren sorguyu yazýnýz.

SELECT
ITM.CATEGORY1,ITM.CATEGORY2,ITM.BRAND,SUM(OD.LINETOTAL) AS TOTALPRICE
FROM
ORDERDETAILS OD
INNER JOIN ITEMS ITM ON ITM.ID=OD.ITEMID

GROUP BY ITM.CATEGORY1,ITM.CATEGORY2,ITM.BRAND
ORDER BY ITM.CATEGORY1, ITM.CATEGORY2,SUM(OD.LINETOTAL) DESC

--Her bir ürün zaman içinde farklý fiyatlar ile satýlmaktadýr. Her ürünün minimum,maximum ve ortalama ne kadar fiyattan
--satýldýðý bilgisi ile kaç kez ve kaç adet satýldýðý bilgisini þekildeki gibi getiren sorguyu yazýnýz.

SELECT 
ITM.BRAND,ITM.CATEGORY1,ITM.ITEMCODE,ITM.ITEMNAME,
COUNT(OD.ID) AS SALECOUNT, SUM(OD.AMOUNT) AS TOTALAMOUNT,
MIN(OD.UNITPRICE) AS MINPRICE,MAX(OD.UNITPRICE) AS MAXPRICE,AVG(OD.UNITPRICE) AS AVGPRICE
FROM ITEMS ITM
INNER JOIN ORDERDETAILS OD ON OD.ITEMID=ITM.ID
GROUP  BY ITM.BRAND,ITM.CATEGORY1,ITM.ITEMCODE,ITM.ITEMNAME

--Müþterilerin sistemde kayýtlý adres sayýsýný ve son alýþveriþ yaptýðý adres bilgisini getiren sorguyu yazýnýz.

SELECT U.ID,U.NAMESURNAME,
(SELECT COUNT(*) FROM ADDRESS WHERE USERID=U.ID) AS ADRESSCOUNT,
(SELECT  ADDRESSTEXT FROM ADDRESS WHERE ID IN 
	(SELECT TOP 1 ADDRESSID FROM ORDERS WHERE USERID=U.ID ORDER BY DATE_ DESC )
	) AS LASTSHOPPINGADRESS
FROM USERS U

--Müþterilerin sistemde kayýtlý adres sayýsýný ve son alýþveriþ yaptýðý adres bilgisini
--þehir,ilçe ve semti ile birlikte getiren sorguyu yazýnýz.

SELECT TMP.NAMESURNAME,TMP.ADDRESSCOUNT,A.CITYID,C.CITY,T.TOWN,D.DISTRICT,A.POSTALCODE,A.ADDRESSTEXT FROM
(
SELECT U.ID,U.NAMESURNAME,
(SELECT COUNT(*) FROM ADDRESS WHERE USERID=U.ID) AS ADDRESSCOUNT,
(SELECT TOP 1 ADDRESSID FROM ORDERS WHERE USERID=U.ID ORDER BY DATE_ DESC ) AS LASTADDRESSID
FROM USERS U) TMP 
INNER JOIN ADDRESS A ON A.ID=TMP.LASTADDRESSID
INNER JOIN CITIES C ON C.ID=A.CITYID
INNER JOIN TOWNS T ON T.ID=A.TOWNID
INNER JOIN DISTRICTS D ON D.ID=A.DISTRICTID

--Ocak ayý içerisinde en az 10 gün boyunca günlük 500 TL ve altýnda sipariþ veren þehirleri listelettiren sorguyu yazýnýz.
SELECT CITY,COUNT(*) FROM
(
SELECT 
C.CITY,CONVERT(DATE,O.DATE_) AS DATE_ ,SUM(O.TOTALPRICE) AS TOTALPRICE
FROM ORDERS O 
INNER JOIN ADDRESS A ON A.ID=O.ADDRESSID
INNER JOIN CITIES C ON C.ID=A.CITYID
WHERE O.DATE_ BETWEEN '20190101' AND '2019-01-31 23:59:59'
GROUP BY C.CITY,CONVERT(DATE,O.DATE_)
HAVING SUM(O.TOTALPRICE)<500
) TMP
GROUP BY CITY
HAVING COUNT(CITY)>=10
